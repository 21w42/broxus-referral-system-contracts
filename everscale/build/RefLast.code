.version sol 0.57.1

.macro constructor
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
GETGLOB 6
THROWIF 51
ENDS
.loc ../contracts/RefLast.sol, 25
THROW 100
.loc ../contracts/RefLast.sol, 0

.macro onDeployOrUpdate
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/RefLast.sol, 28
OVER
PUSHCONT {
	LDREF
	LDU 32
	LDREF
	ENDS
	CTOS
}
PUSHCONT {
	LDREF
	LDU 32
}
IFELSE
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDU 128
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
ENDS
.loc ../contracts/RefLast.sol, 0
CALLREF {
	CALL $onDeployOrUpdate_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro onDeployOrUpdate_internal_macro
.loc ../contracts/RefLast.sol, 32
PUSHREF {
	.blob x4d75737420626520726f6f74
}
GETGLOB 9
GETGLOB 12
SDEQ
THROWARGIFNOT 400
.loc ../contracts/RefLast.sol, 33
ROLL 5
SETGLOB 15
.loc ../contracts/RefLast.sol, 34
ROLL 4
SETGLOB 14
.loc ../contracts/RefLast.sol, 35
ROLL 3
SETGLOB 13
.loc ../contracts/RefLast.sol, 36
ROT
SETGLOB 16
.loc ../contracts/RefLast.sol, 37
BLOCKLT
SETGLOB 17
.loc ../contracts/RefLast.sol, 39
DUP
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
OVER
MYADDR
SDEQ
NOT
AND
PUSHCONT {
	.loc ../contracts/RefLast.sol, 40
	DUP
	NEWC
	STSLICECONST x42_
	STSLICE
	PUSHINT 111
	STZEROES
	ENDC
	PUSHINT 128
	ADDCONST 2
	UFITS 8
	SENDRAWMSG
	.loc ../contracts/RefLast.sol, 0
}
IF
.loc ../contracts/RefLast.sol, 0
BLKDROP 4

.macro meta
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/RefLast.sol, 48
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
ENDS
.loc ../contracts/RefLast.sol, 0
CALLREF {
	CALL $meta_internal_macro$
}
PUSH S5
PUSHCONT {
	PUSH S7
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	REVERSE 6, 0
	NEWC
	STSLICECONST x8281aa15
	STSLICE
	ROLLREV 4
	NEWC
	STSLICE
	ROLLREV 3
	NEWC
	STSLICE
	STU 128
	STU 64
	STBREFR
	STBREFR
	STBREFR
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 1
	STUR 106
	REVERSE 6, 0
	NEWC
	GETGLOB 4
	INDEX 5
	STUR 32
	STSLICE
	ROLLREV 4
	NEWC
	STSLICE
	ROLLREV 3
	NEWC
	STSLICE
	STU 128
	STU 64
	STBREFR
	STBREFR
	STBREFR
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro meta_internal_macro
.loc ../contracts/RefLast.sol, 49
GETGLOB 15
.loc ../contracts/RefLast.sol, 50
GETGLOB 14
.loc ../contracts/RefLast.sol, 51
GETGLOB 13
.loc ../contracts/RefLast.sol, 52
GETGLOB 16
.loc ../contracts/RefLast.sol, 53
GETGLOB 17
.loc ../contracts/RefLast.sol, 0

.globl	_reserve_internal
.type	_reserve_internal, @function
CALL $_reserve_internal_macro$

.macro _reserve_internal_macro
.loc ../contracts/RefLast.sol, 57
PUSHINT 0
.loc ../contracts/RefLast.sol, 0

.macro platformCode
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/RefLast.sol, 60
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
ENDS
.loc ../contracts/RefLast.sol, 0
CALLREF {
	CALL $platformCode_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHSLICE x00000000000000000000000020215fbea_
	STSLICER
	STREF
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 106
	STZEROES
	GETGLOB 4
	INDEX 5
	STUR 32
	STREF
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro platformCode_internal_macro
.loc ../contracts/RefLast.sol, 61
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
PUSHINT 64
SETINDEXQ 4
FALSE
SETINDEXQ 1
SETGLOB 4
GETGLOB 11
.loc ../contracts/RefLast.sol, 0

.globl	_buildRefLastInitData_internal
.type	_buildRefLastInitData_internal, @function
CALL $_buildRefLastInitData_internal_macro$

.macro _buildRefLastInitData_internal_macro
.loc ../contracts/RefLast.sol, 65
PUSHINT 0
NEWC
STU 256
PUSHINT 0
NEWDICT
PUSHINT 64
DICTUSETB
SWAP
PUSHINT 1
ROT
PUSHINT 64
DICTUSET
NEWC
STDICT
ENDC
GETGLOB 11
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
.loc ../contracts/RefLast.sol, 0

.internal-alias :onCodeUpgrade, 2
.internal :onCodeUpgrade
.loc ../contracts/RefLast.sol, 76
CALLREF {
	CALL $_reserve_internal_macro$
}
PUSHINT 2
RAWRESERVE
.loc ../contracts/RefLast.sol, 77
PUSHINT 0
SETGLOB 10
PUSHREF {
}
SETGLOB 11
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 12
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 13
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 14
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 15
PUSHINT 0
SETGLOB 16
PUSHINT 0
SETGLOB 17
.loc ../contracts/RefLast.sol, 80
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
.loc ../contracts/RefLast.sol, 81
SWAP
CTOS
LDMSGADDR
LDU 32
LDU 32
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDU 128
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
REVERSE 9, 0
SETGLOB 12
DROP
SETGLOB 10
SETGLOB 15
SETGLOB 14
SETGLOB 13
SETGLOB 16
POP S2
SETGLOB 11
.loc ../contracts/RefLast.sol, 92
DUP
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
OVER
MYADDR
SDEQ
NOT
AND
PUSHCONT {
	.loc ../contracts/RefLast.sol, 93
	DUP
	NEWC
	STSLICECONST x42_
	STSLICE
	PUSHINT 111
	STZEROES
	ENDC
	PUSHINT 128
	ADDCONST 2
	UFITS 8
	SENDRAWMSG
	.loc ../contracts/RefLast.sol, 0
}
IF
.loc ../contracts/RefLast.sol, 0
DROP
CALLREF {
	CALL $c7_to_c4$
}
COMMIT
THROW 0

.macro c4_to_c7
PUSHROOT
CTOS
LDU 256 ; pubkey c4
LDU 64 ; pubkey timestamp c4
LDU 1 ; ctor flag
NIP
LDU 32
LDREF
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDU 128
LDU 64
ENDS
SETGLOB 17
SETGLOB 16
SETGLOB 15
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
SETGLOB 3
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS
SBITS
GTINT 1
PUSHCONT {
	PUSHINT 0
	PUSHROOT
	CTOS
	PLDDICT ; D
	PUSHINT 0
	PUSHREF {
	}
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	BLKPUSH 3, 0
	PUSHINT 0
	DUP
	SETGLOB 17
	SETGLOB 16
	SETGLOB 15
	SETGLOB 14
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
}
IFREFELSE {
	CALL $c4_to_c7$
}

.macro c7_to_c4
GETGLOB 17
GETGLOB 16
GETGLOB 15
GETGLOB 14
GETGLOB 13
GETGLOB 12
GETGLOB 11
GETGLOB 10
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STONE
STU 32
STREF
STSLICE
ROLLREV 5
NEWC
STSLICE
ROLLREV 4
NEWC
STSLICE
ROLLREV 3
NEWC
STSLICE
STU 128
STU 64
STBREFR
STBREFR
STBREFR
ENDC
POPROOT

.macro upd_only_time_in_c4
PUSHROOT
CTOS
LDU 256
LDU 64
NIP
GETGLOB 3
ROT
NEWC
STU 256
STU 64
STSLICE
ENDC
POPROOT

.internal-alias :main_internal, 0
.internal :main_internal
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSH S2
CTOS
LDU 4 ; bounced tail
LDMSGADDR ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
GETGLOB 4
TRUE
SETINDEXQ 1
PUSHINT 10000000
SETINDEXQ 2
NULL
SETINDEXQ 3
PUSHINT 0
SETINDEXQ 4
SETGLOB 4
IFRET
OVER
SEMPTY ; isEmpty
IFJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
OVER
LDUQ 32  ; [funcId] body' ok
THROWIFNOT 60
OVER
IFNOTJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.internal-alias :main_external, -1
.internal :main_external
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 9
OVER
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP
	HASHSU ; signatureSlice msgSlice hashMsgSlice
	SWAP
	LDU 1 ; signatureSlice hashMsgSlice havePubkey msgSlice
	SWAP
	PUSHCONT {
		LDU 256 ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG S3
		SWAP
	}
	PUSHCONT {
		XCHG S2
		GETGLOB 2
	}
	IFELSE
	CHKSIGNU ; msgSlice isSigned
	THROWIFNOT 40
}
PUSHCONT {
	LDU 1 ; havePubkey msgSlice
	SWAP
	THROWIF 58
}
IFELSE
LDU 64 ; timestamp msgSlice
SWAP
CALL $replay_protection_macro$
LDU 32 ; expireAt msgSlice
SWAP
NOW ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU 32 ; funcId body
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.macro _root
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 12
OVER
PUSHCONT {
	PUSHSLICE xc000000000000000000000000089c06b8e
	NEWC
	STSLICE
	STSLICE
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro _lastReferrer
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 13
OVER
PUSHCONT {
	PUSHSLICE xc00000000000000000000000009fa179df
	NEWC
	STSLICE
	STSLICE
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro _lastReferred
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 14
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000d84bfca7
	NEWC
	STSLICE
	STSLICE
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro _lastRefWallet
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 15
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000bead666f
	NEWC
	STSLICE
	STSLICE
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro _lastRefReward
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 16
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000c65b10dc
	NEWC
	STSLICE
	STU 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro _lastRefUpdate
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 17
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000ebeaa011
	NEWC
	STSLICE
	STU 64
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro public_function_selector
DUP
PUSHINT 362821883
LEQ
IFJMPREF {
	DUP
	PUSHINT 8748794
	EQUAL
	IFJMPREF {
		CALL $platformCode$
	}
	DUP
	PUSHINT 42052117
	EQUAL
	IFJMPREF {
		CALL $meta$
	}
	DUP
	PUSHINT 163605390
	EQUAL
	IFJMPREF {
		CALL $_root$
	}
	DUP
	PUSHINT 362821883
	EQUAL
	IFJMPREF {
		CALL $onDeployOrUpdate$
	}
}
DUP
PUSHINT 1481374887
LEQ
IFJMPREF {
	DUP
	PUSHINT 530676191
	EQUAL
	IFJMPREF {
		CALL $_lastReferrer$
	}
	DUP
	PUSHINT 1051551343
	EQUAL
	IFJMPREF {
		CALL $_lastRefWallet$
	}
	DUP
	PUSHINT 1180373212
	EQUAL
	IFJMPREF {
		CALL $_lastRefReward$
	}
	DUP
	PUSHINT 1481374887
	EQUAL
	IFJMPREF {
		CALL $_lastReferred$
	}
}
DUP
PUSHINT 1810538513
LEQ
IFJMPREF {
	DUP
	PUSHINT 1756716863
	EQUAL
	IFJMPREF {
		CALL $constructor$
	}
	DUP
	PUSHINT 1810538513
	EQUAL
	IFJMPREF {
		CALL $_lastRefUpdate$
	}
}

